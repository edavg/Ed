---
import "@fontsource-variable/onest";
import Nav from "../components/nav.astro";
import { ViewTransitions } from "astro:transitions";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es-PY">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class="text-yellow-50 font-medium mt-12 max-w-screen-lg mx-auto w-11/12 antialiased selection:bg-yellow-50 selection:text-slate-800"
  >
    <header>
      <Nav />
    </header>

    <div class="fixed left-0 top-0 -z-10 h-full w-full">
      <div class="relative h-full w-full bg-slate-950 bg-slate">
        <div
          class="move absolute bottom-0 left-[0] top-[-10%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(69,87,189,0.15),rgba(255,255,255,0))]"
        >
        </div><div
          class="move absolute bottom-0 hidden md:block right-[-0%] top-[-10%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(69,87,189,0.15),rgba(255,255,255,0))]"
        >
        </div>
      </div>
    </div>
    <div class="relative animate-fade mt-36">
      <slot />
    </div>
    <style is:global>
      ::view-transition-old(root),
      ::view-transition-new(root) {
        animation-duration: 0.8s;
      }

      ::-webkit-scrollbar {
        display: none;
        height: 5px;
        width: 10px;
      }

      ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background-color: rgb(30, 41, 59);
        border: 2px solid transparent;
        background-clip: content-box;
      }
    </style>
    <!-- <script>
      import gsap from "gsap";
      function getRandomPosition(max: number) {
        return Math.floor(Math.random() * max);
      }

      function animateToRandomPosition() {
        const maxX = 200;
        const maxY = 200;

        gsap.to(".move", {
          duration: 2,
          ease: "sine.out",
          x: getRandomPosition(maxX),
          y: getRandomPosition(maxY),
          onComplete: animateToRandomPosition,
        });
      }

      animateToRandomPosition();

      gsap.fromTo(
        ".ed",
        {
          y: 5,
        },
        {
          y: -5,
          repeat: -1,
          yoyo: true,
          ease: "sine.inOut",
          duration: 3,
        }
      );
    </script> -->
  </body>
</html>
