---
import "@fontsource-variable/onest";
import Nav from "../components/nav.astro";
import Footer from "../components/footer.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es-PY">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Eduardo Villamayor | Portfolio " />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta
      name="generator"
      content="Eduardo Villamayor, desarrollador Front-End."
    />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#ffffff" />
    <title>{title}</title>
  </head>
  <body
    data-barba="wrapper"
    style="overflow: hidden;"
    class="text-textPrimary bg-slate-950 font-medium antialiased selection:mix-blend-difference selection:bg-yellow-50 selection:text-slate-800"
  >
    <!-- Preloaders -->
    <div
      dir="rtl"
      data-page="transition"
      class="h-screen grid lg:grid-cols-3 fixed inset-0 z-[999] text-2xl md:text-3xl lg:text-5xl font-bold"
    >
      <div class="h-full w-full bg-slate-950"></div>
      <div
        class="h-full relative overflow-hidden w-full grid place-items-center bg-slate-950"
      >
        <span class="preLoader"></span>
      </div>
      <div class="h-full w-full bg-slate-950"></div>
    </div>

    <!-- Pages transition -->
    <div
      class="transition w-full h-screen grid place-items-center bg-slate-950 fixed inset-0 z-10 [clipPath:_inset(100%_0_0_0)] text-3xl font-bold lg:text-5xl"
    >
    </div>

    <!-- Circulos en el bg layout -->
    <div class="fixed left-0 top-0 -z-10 h-full w-full">
      <div class="relative h-full w-full">
        <div
          class="move absolute bottom-0 left-[0] top-[-10%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(69,87,189,0.15),rgba(255,255,255,0))]"
        >
        </div>
        <div
          class="move absolute bottom-0 hidden md:block right-[-0%] top-[-10%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(69,87,189,0.15),rgba(255,255,255,0))]"
        >
        </div>
        <div
          class="move absolute hidden md:block left-[10%] bottom-[-10%] h-[500px] w-[500px] rounded-full bg-[radial-gradient(circle_farthest-side,rgba(69,87,189,0.15),rgba(255,255,255,0))]"
        >
        </div>
      </div>
    </div>

    <Nav />
    <!-- Main document -->
    <main class="relative max-w-6xl mx-auto px-4 md:px-6">
      <slot />
    </main>
    <Footer />

    <script>
      import gsap from "gsap";
      import Lenis from "@studio-freight/lenis";

      // Lenis scroll
      const lenis = new Lenis();
      const raf = (time: any) => {
        lenis.raf(time);

        requestAnimationFrame(raf);
      };

      requestAnimationFrame(raf);

      // Sizes para el intro

      function GetSizes() {
        let width = window.innerWidth;
        return width > 768 ? "inset(0 0 0 100%)" : "inset(0 50% 0 50%)";
      }

      // Intro guardado en el sessionStorage
      // En caso de ya haber entrado, que no vuelva a mostrar la animación

      document.addEventListener("DOMContentLoaded", () => {
        const intro = document.querySelector(
          '[data-page="transition"]'
        ) as HTMLDivElement;
        const preLoader = document.querySelector(
          ".preLoader"
        ) as HTMLSpanElement;

        const introDivs = document.querySelectorAll(
          '[data-page="transition"] div'
        );

        if (!sessionStorage.getItem("preload")) {
          sessionStorage.setItem("preload", "true");

          document.body.style.cursor = "wait";

          const saludos = [
            "Welcome",
            "Bienvenue",
            "Benvenuto",
            "Bem-vindo",
            "Willkommen",
            "Welkom",
            "Witaj",
            "Vítejte",
            "Välkommen",
            "Velkommen",
            "Tervetuloa",
            "Üdvözöljük",
            "Hoş geldiniz",
            "환영합니다",
            "ようこそ",
            "أهلاً وسهلاً",
            "Добро пожаловать",
          ];
          let currentSaludo = 0;

          setTimeout(() => {
            const saludoInterval = setInterval(() => {
              preLoader.textContent = saludos[currentSaludo];

              currentSaludo++;

              if (currentSaludo >= saludos.length) {
                clearInterval(saludoInterval);

                const tl = gsap.timeline();

                tl.to(preLoader, {
                  opacity: 0,
                  duration: 0.5,
                  onComplete: () => {
                    preLoader.textContent = "Bienvenido";
                  },
                }).to(preLoader, {
                  opacity: 1,
                  duration: 0.5,
                });

                introDivs.forEach((div) => {
                  gsap.to(div, {
                    clipPath: GetSizes(),
                    overflow: "hidden",
                    delay: 1.5,
                    duration: 0.5,
                    ease: "expo.in",
                    onComplete: () => {
                      intro.style.display = "none";
                      document.body.style.overflow = "auto";
                      document.body.style.cursor = "auto";
                    },
                  });
                });

                tl.from(".ed", {
                  y: 60,
                  delay: 1,
                  duration: 0.5,
                }).from('[data-intro="swipe"]', {
                  clipPath: "inset(0 0 100% 100%)",
                  duration: 0.5,
                });
              }
            }, 50);
          }, 800);
        } else {
          intro.style.display = "none";
          document.body.style.overflow = "auto";
          document.body.style.cursor = "auto";
        }
      });
    </script>

    <script>
      import gsap from "gsap";
      import SplitType from "split-type";
      import { ScrollTrigger, TextPlugin } from "gsap/all";

      gsap.registerPlugin(TextPlugin, ScrollTrigger);

      const splitType = document.querySelectorAll(".reveal");

      const underline = document.getElementById("underline");

      const underLines = document.querySelectorAll(".underlines");

      const servicios = document.getElementById("servicios");

      splitType.forEach((char: any) => {
        const text = new SplitType(char, { types: "chars,words" });

        gsap.from(text.words, {
          scrollTrigger: {
            trigger: char,
            scrub: true,
            start: "top 65%",
            end: "top 50%",
          },
          stagger: 0.3,
          scaleY: 0,
        });
      });

      gsap.from(underline, {
        width: "0%",
        scrollTrigger: {
          trigger: servicios,
          start: "top 80%",
          end: "bottom 0%",
          scrub: true,
        },
      });

      underLines.forEach((line) => {
        gsap.from(line, {
          width: "0%",
          scrollTrigger: {
            trigger: line,
            start: "top 80%",
            end: "bottom 0%",
            scrub: true,
          },
        });
      });
    </script>

    <style is:global>
      ::-webkit-scrollbar {
        display: none;
      }
    </style>
  </body>
</html>
